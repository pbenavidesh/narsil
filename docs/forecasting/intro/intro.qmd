---
title: "Time Series Forecasting"
author: "Pablo Benavides Herrera"
date: 2024-12-03
format: 
  html:
    execute:
      echo: false
      warning: false
      message: false
  revealjs:
    toc: false
    theme: league
    execute:
      echo: false
      message: false
      warning: false
    output-file: intro_pres.html
---


# What is a time series? {background-image="dark.jpg"}

```{r}
#| label: pkgs
library(pacman)
p_load(tidyverse, plotly, patchwork, timetk, modeltime, tidyquant, tsibble, feasts, fable, tsibbledata, fpp3, ggpubr, jpeg)
```

## Is this a time series? {}



```{r}
#| label: gapminder
#| fig-cap: Life expectancy & GDP per Capita across countries
p <- gapminder::gapminder |> 
  ggplot(aes(x = gdpPercap, y = lifeExp, color = country,
                       size = pop, label = country)) +
  geom_point(aes(frame = year)) + 
  scale_x_log10() + 
  ylab("Esperanza de vida (años)") +
  xlab("PIB per cápita (USD, deflactado)") +
  theme(legend.position = "none")
```

:::{.content-visible unless-format="pdf"}

```{r}
ggplotly(p)
```

:::

:::{.content-visible when-format="pdf"}

```{r}
p
```

:::

:::{.notes}
If we focus solely on the regular plot, we wouldn't have any time series. However, when we map each variable through time, we now have multiple time series: one for each country regarding life exp., GDP per capita, and population.
:::

# Financial Series

## Stocks

:::{.columns}

:::{.column width="30%"}
![](fragua.png){fig-align="center"}
:::

:::{.column width="70%"}

```{r}
#| label: fragua
#| warning: false
#| fig-cap: Stocks, FX, ... are all time series

fragua <- tq_get("FRAGUAB.MX", from = "2021-01-01")

fragua |> 
  ggplot(aes(x = date, open = open, high = high, low = low, close = close)) +
  geom_barchart(size = 1) +
  geom_bbands(ma_fun = SMA, sd = 2, n = 20) +
  theme_tq() +
  labs(x = "")
```
:::

:::

## Cryptos {background-image="doge.jpg" data-hide-slide-number="true"}

:::{.content-hidden when-format="revealjs"}
![Crypto currencies are also time series](doge.jpg){width=100%}
:::

:::{.notes}
Any variable that is measured through time is a time series.
:::

# What are forecasts?{backgroung-color="black" background-image="walter2.jpeg" data-hide-slide-number="true"}

:::{.content-hidden when-format="revealjs"}
![](walter2.jpeg){width=100%}
:::

:::{.content-hidden unless-format="revealjs"}

## {auto-animate=true}

```{mermaid}
flowchart LR
    A(There are two types of Data Scientists)

```

## {auto-animate=true}

```{mermaid}
flowchart LR
    A(There are two types of Data Scientists)
    A-->B(Those who can't predict the future)
```

:::

## {auto-animate=true}

```{mermaid}
flowchart LR
    A(There are two types of Data Scientists)
    A-->B(Those who can't predict the future)
    A-->C(Those who don't know that they can't predict the future)
```


## {background-image="dr_strange.jpg" data-hide-slide-number="true"}

What was Dr. Strange doing here?

## {background-image="dr_strange_math.jpg" data-hide-slide-number="true"}

:::{.notes}
Dr. Strange didn't have the Time stone. He was using a high-tech gamer PC to run millions of simulations.
:::

# Can all variables be predicted with the same accuracy?

## Eclipses {background-image="eclipse.jpg" data-hide-slide-number="true"}

:::{.content-hidden when-format="revealjs"}

![We can predict eclipses with complete certainty](eclipse.jpg){width=100%}

:::

##  {background-image="google.jpg" data-hide-slide-number="true"}

```{r}
#| label: google_2
#| fig-cap: It's not so easy to predict stock prices

google_stock <- tsibbledata::gafa_stock %>%
  filter(Symbol == "GOOG") %>%
  mutate(day = row_number()) %>%
  tsibble::update_tsibble(index = day, regular = TRUE)

# Filter the year of interest
google_2015 <- google_stock %>% filter(year(Date) == 2015)

fit <- google_2015 %>%
  model(NAIVE(Close))

sim <- fit %>%  generate(h = 30, times = 50, bootstrap = TRUE, seed = 123)

p <- google_2015 %>%
  ggplot(aes(x = day)) +
  geom_line(aes(y = Close), size = 1) +
  geom_line(aes(y = .sim, colour = as.factor(.rep)), data = sim, size = 1) +
  ggtitle("Google closing stock price") +
  guides(col = "none") +
  theme(legend.position = "none")

p
```

## Beer Production Forecasts

::: {.columns}

::: {.column width="70%"}

```{r}
#| label: beer
#| fig-cap: Can you observe any strange patterns?

aus_production |> 
  model(arima = ARIMA(Beer)) |> 
  forecast(h = "5 years") |> 
  autoplot(aus_production |> filter_index("1990 Q1" ~ .), size = 1) +
  labs(title = "Producción de cerveza",
       x = "Trimestre",
       y = "Megalitros")
```

:::

::: {.column width="30%"}
![](homer.png)
:::

::::

## Electricity Demand

```{r}
#| label: energy
vic_elec_daily <- vic_elec %>%
  # filter(year(Time) == 2014) %>%
  index_by(Date = date(Time)) %>%
  summarise(
    Demand = sum(Demand)/1e3,
    Temperature = max(Temperature),
    Holiday = any(Holiday)
  ) %>%
  mutate(Day_Type = case_when(
    Holiday ~ "Holiday",
    wday(Date) %in% 2:6 ~ "Weekday",
    TRUE ~ "Weekend"
  ))
```

```{r}
#| label: energy_plotly
p <- vic_elec_daily |> 
  ggplot(aes(x = Date, y = Demand)) +
  geom_line(color = "yellow2", size = 1) +
  theme_dark() +
  labs(x = "Fecha", y = "Demanda")

ggplotly(p, dynamicTicks = TRUE) |> rangeslider()
```

## Employment

```{r}
#| label: empleo

us_retail_employment <- us_employment %>%
  filter(year(Month) >= 1990, Title == "Retail Trade")
```


```{r}
#| label: empleo_fcst
#| fig-cap: US Retail Employment

us_retail_employment |> 
  model(ets = ARIMA(Employed)) |> 
  forecast(h = "6 years") |> 
  autoplot(color = "purple", size = 1) +
  autolayer(us_retail_employment, Employed, color = "purple", size = 1) +
  theme_pubclean() +
  labs(x = "Mes", y = "Empleos")
```


